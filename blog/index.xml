<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Pion</title>
    <link>https://pion.ly/blog/</link>
    <description>Recent content in Blog on Pion</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pion.ly/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WebRTC Everywhere</title>
      <link>https://pion.ly/blog/webrtc-everywhere/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pion.ly/blog/webrtc-everywhere/</guid>
      <description>In this post we&amp;rsquo;ll take a look at all the places you can run pions/webrtc.
Server The first use-case for a Go WebRTC library naturally is running WebRTC on the server. This enables you to connect to browsers and other WebRTC servers directly while punching through NATs. Because the Pion WebRTC stack is written completely in Go, you can run it anywhere Go runs. And that&amp;rsquo;s a lot of places, including: Linux, MaxOS and Windows on both x86 and ARM.</description>
    </item>
    
    <item>
      <title>WebRTC Data Channels in Go</title>
      <link>https://pion.ly/blog/data-channels-introduction/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pion.ly/blog/data-channels-introduction/</guid>
      <description>Today we&amp;rsquo;ll walk through setting up a Data Channel connection in Go using pions/webrtc. Check out our knowledge base articles on WebRTC if you&amp;rsquo;re new to it. You can also skip to the full examples if you just want to look at the code.
Preparation Let&amp;rsquo;s quickly cover how to get started with pions/webrtc. If you&amp;rsquo;re familiar with Go you can skip to the next section. To start you can download the library using go get: go get github.</description>
    </item>
    
    <item>
      <title>Why Pion</title>
      <link>https://pion.ly/blog/why-pion/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pion.ly/blog/why-pion/</guid>
      <description>&amp;lsquo;Why would I use Pion&amp;rsquo; this is the first question we get asked, and it is a great one. It is a hard one to answer, and usually it is different depending on your needs. However it seems to always come down to a few major reasons.
Learning new software is an investment, as developers we know how frustrating it can be when you make the wrong choice. So here is what drives Pion, and why we think you should give us a try.</description>
    </item>
    
  </channel>
</rss>